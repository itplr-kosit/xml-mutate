// Generated by delombok at Fri Aug 13 16:11:22 CEST 2021
package de.init.kosit.commons.transform;

import javax.xml.bind.Unmarshaller;
import javax.xml.transform.dom.DOMSource;

import de.init.kosit.commons.convert.ConversionService;
import net.sf.saxon.dom.NodeOverNodeInfo;
import net.sf.saxon.s9api.Destination;
import net.sf.saxon.s9api.XdmDestination;

/**
 * Convert, der via JAXB in ein Zielobjekt umwandelt.
 *
 * @author Andreas Penski
 */
class ObjektConvert<T> implements Convert<T> {
    private final XdmDestination xdmDestination = new XdmDestination();
    private final ConversionService conversionService;
    private final Class<T> targetClass;
    private Unmarshaller.Listener listener;

    ObjektConvert(final ConversionService conversionService, final Class<T> targetClass, final Unmarshaller.Listener listener) {
        this(conversionService, targetClass);
        this.listener = listener;
    }

    public ObjektConvert(final ConversionService conversionService, final Class<T> targetClass) {
        this.conversionService = conversionService;
        this.targetClass = targetClass;
    }

    @Override
    public Destination createDestination() {
        return xdmDestination;
    }

    @Override
    public T getResult() {
        return this.conversionService.readXml(new DOMSource(NodeOverNodeInfo.wrap(xdmDestination.getXdmNode().getUnderlyingNode())), targetClass, listener);
    }
}
