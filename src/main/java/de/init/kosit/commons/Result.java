// Generated by delombok at Fri Aug 13 16:11:22 CEST 2021
package de.init.kosit.commons;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.StringJoiner;

public class Result<T, E> {
    private T object;
    /**
     * Mögliche Fehlermeldungen.
     */
    private Collection<E> errors = new ArrayList<>();
    /**
     * Mögliche Warnungen.
     */
    private Collection<E> warnings;

    public Result(Collection<E> errors) {
        this(null, errors);
    }

    public Result(T objekt, Collection<E> errors) {
        this(objekt, errors, Collections.emptyList());
    }

    public Result(T o) {
        this(o, Collections.emptyList(), Collections.emptyList());
    }

    /**
     * Zeigt an, ob der Parsing-Schritt erfolgreich war
     * 
     * @return true wenn erfolgreich
     */
    public boolean isValid() {
        return object != null && errors.isEmpty();
    }

    public boolean isInvalid() {
        return !isValid();
    }

    public String getErrorDescription() {
        final StringJoiner joiner = new StringJoiner("\n");
        errors.forEach(e -> joiner.add(e.toString()));
        return joiner.toString();
    }

    @java.lang.SuppressWarnings("all")
    public T getObject() {
        return this.object;
    }

    /**
     * Mögliche Fehlermeldungen.
     */
    @java.lang.SuppressWarnings("all")
    public Collection<E> getErrors() {
        return this.errors;
    }

    /**
     * Mögliche Warnungen.
     */
    @java.lang.SuppressWarnings("all")
    public Collection<E> getWarnings() {
        return this.warnings;
    }

    @java.lang.SuppressWarnings("all")
    public Result(final T object, final Collection<E> errors, final Collection<E> warnings) {
        this.object = object;
        this.errors = errors;
        this.warnings = warnings;
    }

    @java.lang.SuppressWarnings("all")
    public Result() {
    }
}
